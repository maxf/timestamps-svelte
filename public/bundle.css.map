{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/TimestampManager.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { onMount } from 'svelte';\n\n  export let name;\n\n  const appState = {\n    timestamps: [], // array of Date\n    newTimestamp: null // null or { date, month, year, hours, minutes }\n  };\n\n  const pad = (n, d) => n.toString().padStart(d, '0');\n\n\n\n  const formatTimestamp = d => `\n    ${d.getDate()}/${d.getMonth() + 1}/${pad(d.getFullYear(),4)} -\n    ${d.getHours()}:${pad(d.getMinutes(),2)}`;\n\n\n  const isObject = a => (!!a) && (a.constructor === Object);\n\n  const getSavedData = () => {\n    const storedDataString = localStorage.getItem('timestamps');\n    let parsedDataObject;\n    try {\n      parsedDataObject = JSON.parse(storedDataString);\n    } catch (error) {\n      console.log('failed to parse localstorage json.');\n      parsedDataObject = null;\n    }\n    if (!isObject(parsedDataObject)) {\n      console.log('localstorage is not an object. Resetting to {}');\n      localStorage.setItem('timestamps', '{}');\n      parsedDataObject = {};\n    }\n    return parsedDataObject;\n  }\n\n  const getFromLocalStorage = name => {\n    const localData = getSavedData();\n    return localData[name] ?\n      localData[name].map(isoDate => new Date(Date.parse(isoDate)))\n      : [];\n  };\n\n  const saveToLocalStorage = (name, timestamps) => {\n    const localData = getSavedData();\n    localData[name] = timestamps;\n    localStorage.setItem('timestamps', JSON.stringify(localData));\n  };\n\n  const deleteFromLocalStorage = name => {\n    const localData = getSavedData();\n    delete localData[name];\n    localStorage.setItem('timestamps', JSON.stringify(localData));\n  };\n\n  const prepareNewTimestamp = () => {\n    var now = new Date();\n    appState.newTimestamp = {\n      date: now.getDate(),\n      month: now.getMonth(),\n      year: now.getFullYear(),\n      hours: now.getHours(),\n      minutes: now.getMinutes(),\n    }\n  };\n\n const addTimestamp = () => {\n   const d = appState.newTimestamp;\n   appState.timestamps.push(new Date(d.year, d.month, d.date, d.hours, d.minutes));\n   saveToLocalStorage(name, appState.timestamps.sort((a, b) => a-b));\n   appState.newTimestamp = null;\n };\n\n const deleteTimestamp = (timestampToRemove) => {\n   appState.timestamps =\n     appState.timestamps.filter(t => t !== timestampToRemove);\n };\n\n const cancelAddTimestamp = () => appState.newTimestamp = null;\n\n const reset = () => {\n   appState.timestamps = [];\n   appState.newTimestamp = null;\n   deleteFromLocalStorage(name);\n };\n\n // copy the timestamps to the clipboard\n const copy = () => {\n   const copyText = appState.timestamps\n     .map(formatTimestamp)\n     .join();\n   navigator.clipboard.writeText(copyText);\n };\n\n onMount(() => {\n   appState.timestamps = getFromLocalStorage(name);\n   appState.newTimestamp = null;\n });\n\n</script>\n\n<!-- ############################################################################### -->\n\n<style>\n\n  .component {\n    border: 1px solid #64f;\n    margin: 3px;\n    background: white;\n    border-radius: 10px;\n    padding: 10px;\n    width: 206px;\n  }\n\n  .date-2 { width: 2em; }\n\n  .date-4 { width: 4em; }\n\n  button {\n    padding: 0;\n    border: 1px solid white;\n    border-radius: 10px;\n    background: #32f;\n    color: white;\n  }\n\n  button:active {\n    background: #118;\n  }\n\n  .date-input {\n    margin-top: 1em;\n  }\n\n  button.add {\n    background: #e55;\n  }\n\n  button.big {\n    width: 100px;\n    height: 100px;\n  }\n\n  button.small {\n    width: 80px;\n    height: 30px;\n  }\n\n button.del {\n   font-weight: bold;\n   margin-left: .5em;\n   background: #ddd;\n   padding: 3px;\n }\n\n  ul {\n    padding-left: 0;\n  }\n\n  li {\n    list-style-type: none;\n  }\n\n  h1 {\n    font-size: 30px;\n    margin: 0 0 10px 0;\n  }\n\n </style>\n\n\n<!-- ############################################################################### -->\n\n<div class=\"component\">\n  <h1><img src=\"clock-icon-192.png\" alt=\"clock icon\" height=\"20px\"/> {name}</h1>\n  {#if !appState.newTimestamp}\n  <button class=\"big\" on:click={prepareNewTimestamp}>New</button>\n  {:else}\n  <button class=\"big add\" on:click={addTimestamp}>Add</button>\n  <button class=\"big\" on:click={cancelAddTimestamp}>Cancel</button>\n  <div class=\"date-input\">\n    <input class=\"date-2\" bind:value={appState.newTimestamp.date} inputmode=\"numeric\"/>/<input class=\"date-2\" bind:value={appState.newTimestamp.month} inputmode=\"numeric\"/>\n    @\n    <input class=\"date-2\" bind:value={appState.newTimestamp.hours} inputmode=\"numeric\"/>:<input class=\"date-2\" bind:value={appState.newTimestamp.minutes} inputmode=\"numeric\"/>\n  </div>\n  {/if}\n\n  {#if appState.timestamps.length }\n  <ul>\n    {#each appState.timestamps as t}\n    <li>{ formatTimestamp(t) }\n      <button class=\"del\" on:click={() => deleteTimestamp(t)}>‚ùå</button>\n    </li>\n    {/each}\n  </ul>\n  <button class=\"small\" on:click={copy}>Copy</button>\n  <button class=\"small\" on:click={reset}>Reset</button>\n  {/if}\n</div>\n"
  ],
  "names": [],
  "mappings": "AA2GE,UAAU,cAAC,CAAC,AACV,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,MAAM,CAAE,GAAG,CACX,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,KAAK,AACd,CAAC,AAED,OAAO,cAAC,CAAC,AAAC,KAAK,CAAE,GAAG,AAAE,CAAC,AAIvB,MAAM,cAAC,CAAC,AACN,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CACvB,aAAa,CAAE,IAAI,CACnB,UAAU,CAAE,IAAI,CAChB,KAAK,CAAE,KAAK,AACd,CAAC,AAED,oBAAM,OAAO,AAAC,CAAC,AACb,UAAU,CAAE,IAAI,AAClB,CAAC,AAED,WAAW,cAAC,CAAC,AACX,UAAU,CAAE,GAAG,AACjB,CAAC,AAED,MAAM,IAAI,cAAC,CAAC,AACV,UAAU,CAAE,IAAI,AAClB,CAAC,AAED,MAAM,IAAI,cAAC,CAAC,AACV,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,AACf,CAAC,AAED,MAAM,MAAM,cAAC,CAAC,AACZ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACd,CAAC,AAEF,MAAM,IAAI,cAAC,CAAC,AACV,WAAW,CAAE,IAAI,CACjB,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,GAAG,AACd,CAAC,AAEA,EAAE,cAAC,CAAC,AACF,YAAY,CAAE,CAAC,AACjB,CAAC,AAED,EAAE,cAAC,CAAC,AACF,eAAe,CAAE,IAAI,AACvB,CAAC,AAED,EAAE,cAAC,CAAC,AACF,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,AACpB,CAAC"
}